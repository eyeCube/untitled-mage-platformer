<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_star</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index=spr_block_dirt
image_speed=0
visible=0

alarm[0]=global.star_rolling_timer


dir=1




times=0
max_times=global.star_rolling_number

type="spell"
flames=0


last_wind=0 //set to 1 when the wave is on its last block


//angle=270
    //climbing=0
    
    
    //spawns higher or lower depending on circumstances
    
    if position_meeting(x,y,obj_breakable_parent)=0
    {
    
    
    if obj_pc.sprite_index!=spr_pc_ledge_grab
    if position_meeting(x,y,obj_solid_parent)=1
    {
    var go, breakable_block_above;
    go=0
    breakable_block_above=position_meeting(x,y-16,obj_breakable_parent)
    
        if position_meeting(x,y-16,obj_solid_parent)=0
        or breakable_block_above
        if position_meeting(x,y,obj_breakable_parent)=0 //if not spawned on top of a breakable block
        go=1
        
        if go
        y-=16
        if go=0
        or breakable_block_above
        {
            times=1000
            alarm[0]=global.star_rolling_timer*2
        }
    }
    
    if obj_pc.sprite_index!=spr_pc_ledge_grab
    if obj_pc.midair=0
    if position_meeting(x,y+16,obj_solid_parent)=0
    {
    
        if position_meeting(x,y+32,obj_solid_parent)=1
        y+=16
        else
        {
            times=1000
            alarm[0]=global.star_rolling_timer*2
        }
    }
    
    
    }
    else
        {
            times=1000
            alarm[0]=global.star_rolling_timer*2
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(4)
{
        o=instance_create(x+4+random(8),y+16,obj_particle)
    o.sprite_index=spr_star
    if flames
    o.sprite_index=spr_fire
    
    o.image_index=random(100)
    o.image_speed=image_speed
    
    o.direction=90
    o.speed=random(2)*random(1)+3
    if times&gt;=max_times-1
    o.speed+=1
    o.gravity=.15
    o.gravity_direction=270
    
    o.alarm[0]=random(30)*random(1)+15
    
        if flames
        {
            o.image_xscale=random(5)*random(1)+2
            o.image_yscale=o.image_xscale-o.image_xscale*.15+random(o.image_xscale*.3)
            o.scale_loss_rate=.025+random(.02)
        }
    
    
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with obj_enemy_par
hit_by_wave=0
with obj_vert_moving_platform_par
hit_by_wave=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>times+=1



alarm[0]=global.star_rolling_timer//+times






if times&gt;=max_times
{
instance_destroy()
exit
}
else
if times&gt;=max_times-1
{
    damage=damage*2
    last_wind=1
    alarm[0]=global.star_rolling_timer*2
}



var go;
go=0
if position_meeting(x+16*dir,y,obj_solid_parent)=0
or position_meeting(x+16*dir,y,obj_breakable_parent)=1
or position_meeting(x+16*dir,y,obj_vert_moving_platform_par)=1
go=1

if go
{
    if position_meeting(x+16*dir,y+16,obj_solid_parent)=0
    and position_meeting(x+16*dir,y,obj_breakable_parent)=0
    {
        if position_meeting(x+16*dir,y+32,obj_solid_parent)=1
        y+=16
        else
        instance_destroy()
    }
    x+=dir*16
    
}
else
{

    go=0
    
    //if collision_rectangle(x+8,y,x+8+16*dir,y+12,obj_solid_parent,0,1)&gt;0
    if collision_rectangle(x+8,y-16,x+8+16*dir,y-4,obj_solid_parent,0,1)&lt;0
    or position_meeting(x+16*dir,y-16,obj_breakable_parent)
    or position_meeting(x+16*dir,y-16,obj_vert_moving_platform_par)
    go=1
    
    if go
    {
        y-=16
        x+=dir*16
        
    }

}



    if go=0
    {
        if times!=1
        {
            instance_destroy()
        }
        else
        //if times=1
        {
            
        }
    }


        if position_meeting(x,y,obj_soul_cage)=1
        or position_meeting(x,y,obj_breakable_parent)=1
        or position_meeting(x,y,obj_vert_moving_platform_par)=1
        {
            times=1000
        }
        /*
        if position_meeting(x,y+16,obj_soul_cage)=1
        or position_meeting(x,y+16,obj_breakable_parent)=1
        {
            y+=16
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[0] mod 2 =0
or times&gt;=max_times-1

{

var xt, yt;

    //if angle=270
    {
        xt=4+random(8)
        yt=16
    }

        o=instance_create(x+xt,y+yt,obj_particle)
    o.sprite_index=spr_star
    if flames
    o.sprite_index=spr_fire
    
    o.image_index=random(100)
    o.image_speed=image_speed
    
    o.direction=90
    o.speed=random(2.5)*random(1)+2.5
    if times&gt;=max_times-1
    o.speed+=1.5
    o.gravity=.15
    o.gravity_direction=270
    
    o.alarm[0]=random(30)*random(1)+30
    
        if flames
        {
            o.image_xscale=random(5)*random(1)+2
            o.image_yscale=o.image_xscale-o.image_xscale*.15+random(o.image_xscale*.3)
            o.scale_loss_rate=.025+random(.02)
        }
    
    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_vert_moving_platform_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with other
if life&gt;0
{


if hit_by_wave=0
{

hit_by_wave=1

var f, u;
f=damage_modifier_magical
if other.type="fire"
f=damage_modifier_fire

u=1
    
    take_damage
    (
    /*damage*/                  other.damage*f
    ,
    /*player-dealt hit*/        1
    ,
    /*type*/                    other.type
    ,
    /*show hit numbers*/        shows_hit_numbers
    ,
    /*value "hit" is set to*/   global.star_rolling_timer*u
    ,
    /*at what value can hit*/   0
    )
    
if other.flames
{
f=damage_modifier_fire
    take_damage
    (
    /*damage*/                  global.star_rolling_damage_flames*global.pc_magickality*f
    ,
    /*player-dealt hit*/        1
    ,
    /*type*/                    "fire"
    ,
    /*show hit numbers*/        shows_hit_numbers
    ,
    /*value "hit" is set to*/   global.star_rolling_timer*u
    ,
    /*at what value can hit*/   0
    )
}
    
    
    //////////////////////////
                exit
    //////////////////////////
    
}




else
if other.last_wind
if hit_by_wave=1
{

hit_by_wave=2

var f, u;
f=damage_modifier_magical
if other.type="fire"
f=damage_modifier_fire

u=1
    
    take_damage
    (
    /*damage*/                  other.damage/2*f
    ,
    /*player-dealt hit*/        1
    ,
    /*type*/                    other.type
    ,
    /*show hit numbers*/        shows_hit_numbers
    ,
    /*value "hit" is set to*/   global.star_rolling_timer*u
    ,
    /*at what value can hit*/   0
    )
    
if other.flames
{
f=damage_modifier_fire
    take_damage
    (
    /*damage*/                  global.star_rolling_damage_flames*global.pc_magickality*f   /2
    ,
    /*player-dealt hit*/        1
    ,
    /*type*/                    "fire"
    ,
    /*show hit numbers*/        shows_hit_numbers
    ,
    /*value "hit" is set to*/   global.star_rolling_timer*u
    ,
    /*at what value can hit*/   0
    )
}
    
    
    
    //////////////////////////
                exit
    //////////////////////////
    
}


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with other
if invincible_to_wave=0
if life&gt;0
{


if hit_by_wave=0
{

hit_by_wave=1

var f, u;
f=damage_modifier_magical

u=1
    
    take_damage
    (
    /*damage*/                  other.damage*f
    ,
    /*player-dealt hit*/        1
    ,
    /*type*/                    other.type
    ,
    /*show hit numbers*/        shows_hit_numbers
    ,
    /*value "hit" is set to*/   global.star_rolling_timer*u
    ,
    /*at what value can hit*/   0
    )
    
if other.flames
{
f=damage_modifier_fire
    take_damage
    (
    /*damage*/                  global.star_rolling_damage_flames*global.pc_magickality*f
    ,
    /*player-dealt hit*/        1
    ,
    /*type*/                    "fire"
    ,
    /*show hit numbers*/        shows_hit_numbers
    ,
    /*value "hit" is set to*/   global.star_rolling_timer*u
    ,
    /*at what value can hit*/   0
    )
}
    
    //////////////////////////
                exit
    //////////////////////////
    
}




else
if other.last_wind
if hit_by_wave=1
{

hit_by_wave=2

var f, u;
f=damage_modifier_magical

u=1
    
    take_damage
    (
    /*damage*/                  other.damage*f  /2
    ,
    /*player-dealt hit*/        1
    ,
    /*type*/                    other.type
    ,
    /*show hit numbers*/        shows_hit_numbers
    ,
    /*value "hit" is set to*/   global.star_rolling_timer*u
    ,
    /*at what value can hit*/   0
    )

    
    //////////////////////////
                exit
    //////////////////////////
    
}


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
