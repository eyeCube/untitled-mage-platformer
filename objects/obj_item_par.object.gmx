<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>item=""

grav_max=.5
grav=grav_max
terminal_velocity=10
hfriction=.1
air_hfriction=.1
ground_hfriction=.5


can_pick_up=0
alarm[0]=2


pick_up_dist=12

damage=1

collides_with_walls=1
collides_with_enemies=1

flash=0


destroys_off_screen=1

ground_sprite=sprite_index
air_sprite=sprite_index
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_pick_up=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//gravity


if grav&gt;0
{
    vspeed+=grav
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///flashing


if flash&gt;0
{
flash+=1
visible=(flash mod 2)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if collides_with_walls
{

    if place_meeting(x,y+1,obj_solid_parent)=0
    {
        grav=grav_max
        hfriction=air_hfriction
        sprite_index=air_sprite
    }
    else
    {
        grav=0
        hfriction=ground_hfriction
        sprite_index=ground_sprite
    }

}
else
    grav=grav_max
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if vspeed&gt;terminal_velocity
vspeed=terminal_velocity
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if abs(hspeed)&gt;0
hspeed-=hfriction*sign(hspeed)
if abs(hspeed)&lt;hfriction
hspeed=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_pc.can_pick_up
if point_distance(x,y-3,obj_pc.x,obj_pc.y)&lt;pick_up_dist
{


if can_pick_up
//if global.pc_item=""
//if keyboard_check_pressed(ord('C'))
{
    global.pc_item=item
    instance_destroy()
}


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hitting enemy</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hitting enemy


if collides_with_enemies
{

if abs(hspeed)&gt;=1
with collision_rectangle(x-4,y-12,x+4,y+4,obj_enemy_par,0,0)
{
if life&gt;0
{

    take_damage
    (
    /*damage*/                  other.damage
    ,
    /*player-dealt hit*/        1
    ,
    /*type*/                    "projectile"
    ,
    /*show hit numbers*/        shows_hit_numbers
    ,
    /*value "hit" is set to*/   8
    ,
    /*at what value can hit*/   0
    )
    
    hspeed+=sign(other.hspeed)*2/mass
    vspeed-=1
    with other
    {
        hspeed=-sign(hspeed)*3
        vspeed-=1
    }
    
    //o.alpha_loss_rate=1/30
    
}

}

}


///hitting enemies that are vertical moving platforms


if collides_with_enemies
{

if abs(hspeed)&gt;=1
with collision_rectangle(x-4,y-12,x+4,y+4,obj_vert_moving_platform_par,0,0)
{
if life&gt;0
if hit_by_projectile&lt;=0
{

    take_damage
    (
    /*damage*/                  other.damage
    ,
    /*player-dealt hit*/        1
    ,
    /*type*/                    "projectile"
    ,
    /*show hit numbers*/        shows_hit_numbers
    ,
    /*value "hit" is set to*/   8
    ,
    /*at what value can hit*/   0
    )
    
    hspeed+=sign(other.hspeed)*2/mass
    vspeed-=1
    with other
    {
        hspeed=-sign(hspeed)*3
        vspeed-=1
    }
    
    //o.alpha_loss_rate=1/30
    
}

}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if collides_with_walls
{


var xb, yb, cot;
xb=x
yb=y
y=yprevious
x=xprevious

cot=0
    x+=hspeed
if place_meeting(x+hspeed,y,other)
{
    cot=1
    x=xprevious
}
else
{
    x=xb
    y+=vspeed
    if place_meeting(x,y+vspeed,other)
    cot=2
    y=yprevious
}

if cot=0
or place_meeting(x,y,other)
{
x=xprevious
y=yprevious
}



move_contact_object(direction,speed,obj_solid_parent)
x=round(x)
y=round(y)


if x&lt;other.x
or x&gt;other.x+16
{
    hspeed=0
}
if y&lt;other.y
or y&gt;other.y+16
{
    vspeed=0
}




grav=0

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
