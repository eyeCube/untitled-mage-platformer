<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ogger</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_par</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[7]=1



hits_on_player=0
hits_needed=2 //how many steps of collision are necessary to hit obj_pc


destroys_off_screen=1
respawns=1

fan_pushes=0
mass=2

shows_hit_numbers=1
hit_numbers_x_offset=0
hit_numbers_y_offset=-4

view_dist=64+48




aggro=0


flail_id=id
var o;
o=instance_create(x,y,obj_flail)
o.flail_id=flail_id
flail_x=0
flail_y=0
flail_sx=0
flail_sy=0

sprite_drawn=sprite_index



//move=choose(-1,1)
//cant_move=0
cant_change_directions=0


max_speed_charge=2.6
max_speed_normal=1.8
max_speed=max_speed_normal
imagespeed=.2
image_speed=imagespeed
accel_charge=.2
accel_normal=.1
accel=accel_normal
frict=.25

char_grav=.6
grav=0


life=36
souls=2
experience=100

hit=0

//alarm0: facing direction alarm
alarm0=25
alarm0random=50
alarm[0]=round(random(alarm0random))+1

//alarm1: wait to charge alarm
alarm1=17

//alarm2: charge alarm
alarm2=12

//alarm3: cooldown time
alarm3=25


attack_cooldown=1
cooldown_attack=3 //this is what value the previous variable is set to when attacking

stunned=0

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///damage modifiers

damage_modifier_magical=1
damage_modifier_physical=1
damage_modifier_fire=1.667
damage_modifier_lightning=.95
//damage_modifier_physical=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(14)
{
    o=instance_create(x,y,obj_particle)
    
    o.speed=2+random(6)
    o.direction=random(90)+45
    o.gravity=.4
    o.gravity_direction=270
    o.alarm[0]=random(15)+5
    
    
    o.sprite_index=spr_hit
    o.image_speed=0
}




if player_killed_me
{
global.stage_event[stage_event_id]=1
}


with obj_flail
if flail_id=other.flail_id
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if stage_event_id!=0
if global.stage_event[stage_event_id]=1
{
    respawns=0
    souls=0
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0]=alarm0+random(alarm0random)


stunned=0

sprite_drawn=spr_ogger
    max_speed=max_speed_normal
    
    
    
        with obj_flail
        if flail_id=other.flail_id
        {
            damage=0
            can_make_wave=0
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


sprite_drawn=spr_ogger_attack
dir=90
/*
if image_xscale=1
dir=45
else
dir=135*/

vspeed=-1.4
hspeed=image_xscale*-2

accel=accel_normal

alarm[0]=-1

alarm[3]=alarm3


var xt, yt, o;
xt=image_xscale*18
yt=7



with obj_flail
if flail_id=other.flail_id
{
    can_make_wave=1
    alarm[0]=6
    
    damage=damage_max
    wave_dir=other.image_xscale
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[2]=alarm2


sprite_drawn=spr_ogger_charge

stunned=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0]=alarm0+random(alarm0random)


aggro=0
if abs(x-obj_pc.x)&lt;view_dist
aggro=1


if aggro
{
    if obj_pc.x&gt;x
    {
        image_xscale=1
        
    }
    else
    {
        image_xscale=-1
        
    }
    
    alarm[1]=alarm1
    
    alarm[0]=-1
    
    max_speed=max_speed_charge
    accel=accel_charge
    image_speed=.25
    
    //sprite_index=spr_ogger_charge
}

else
image_xscale=choose(-1,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//gravity


if grav&gt;0
{
    vspeed+=grav
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

////////////////////

if stunned&gt;0
{
    hspeed-=frict*sign(hspeed)
    if abs(hspeed)&lt;=frict
    hspeed=0
    
    exit
}

////////////////////




cant_change_directions-=1





if collision_rectangle(x,y-12,x+image_xscale*10,y+6,obj_solid_parent,0,1)&lt;0
//and move!=0
{
    hspeed+=image_xscale*accel
    if abs(hspeed)&gt;max_speed
    hspeed=max_speed*image_xscale
    
    image_speed=imagespeed
}
else
{
if alarm[1]&lt;=0
if cant_change_directions&lt;0
{
    //alarm[0]=alarm0+random(alarm0random)

    //move=-move
    image_xscale=-image_xscale
    
    cant_change_directions=10
    
    if alarm[0]&gt;0
    alarm[0]=max(alarm[0],15)
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var yt;
yt=11

if collision_rectangle(x-9,y+yt-2,x+9,y+yt,obj_solid_parent,0,1)&lt;0
{
    grav=char_grav
}
else
{
    grav=0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if life&lt;=0
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//flail

flail_x=image_xscale*7+(round(image_index) mod 2)*image_xscale*1
flail_y=5
flail_sx=flail_x
flail_sy=flail_y
if sprite_drawn=spr_ogger_charge
{
flail_x=-image_xscale*10
flail_y=-14
flail_sx=flail_x
flail_sy=flail_y
}
if sprite_drawn=spr_ogger_attack
{

flail_xs=image_xscale*17
flail_ys=8

    /*
        var b; b=24*/
        /*
    if dir&gt;180+b
    {
    dir=180+b
    */
        with obj_flail
        if flail_id=other.flail_id
        {
            
            if damage!=0
            {
                with other
                {
                    if image_xscale=1
                    dir-=60/(alarm3/6)
                    if image_xscale=-1
                    dir+=60/(alarm3/6)
                }
            }
            
            
            if place_meeting(x,y,obj_solid_parent)
            and place_meeting(x,y,obj_breakable_parent)=0
            {
                damage=0
                
                /////////////////////
                        exit
                /////////////////////
                
            }
            
                other.flail_x=lengthdir_x(34,other.dir)
                other.flail_y=lengthdir_y(21,other.dir)
        }
        /*
    }
    if dir&lt;0-b
    {
    dir=0-b
    
        with obj_flail
        if flail_id=other.flail_id
        damage=0
    }*/

}
with obj_flail
if flail_id=other.flail_id
{

    x=other.x   +other.flail_x  +other.hspeed
    y=other.y   +other.flail_y  +other.vspeed
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attacking player

if obj_pc.dead&gt;0
exit



if place_meeting(x,y,obj_pc)
{
    
    hits_on_player+=1
    
    if hits_on_player&gt;=hits_needed
    with obj_pc
    {
        if midair=0
        if y&lt;other.y
        exit
        
        //else
        scr_die(0,6)
        
    }

}
else
hits_on_player=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_spikes1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if life&gt;0
{

    
    take_damage
    (
    /*damage*/                  1
    ,
    /*player-dealt hit*/        1
    ,
    /*type*/                    "physical"
    ,
    /*show hit numbers*/        shows_hit_numbers
    ,
    /*value "hit" is set to*/   10
    ,
    /*at what value can hit*/   0
    )
    
    //o.alpha_loss_rate=1/30
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=xprevious
y=yprevious
move_contact_object(direction,speed,obj_solid_parent)
x=round(x)
y=round(y)

speed=0
//move=-move
grav=0

    image_speed=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var col;
col=c_white
if hit&gt;0
if is_odd(hit)
{
    col=c_red
}



draw_sprite_ext(sprite_drawn,image_index,x,y,image_xscale,image_yscale,0,col,1)


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
